Subject: Properties Example
 
package com.capgemini.lesson15;
 
import java.util.Properties;
import java.util.Enumeration;
import java.io.InputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.FileOutputStream;
import java.io.FileInputStream;
 
/**
 * -----------------------------------------------------------------------------
 * Used to provide an example of how to get/set Properties and load/save
 * property files.
 * -----------------------------------------------------------------------------
 */
public class DatasourcePropertyFiles {
 
    private static Properties createDefaultProperties() {
 
         Properties tempProp = new Properties();
         /* Database connection parameter properties are set */
         tempProp.setProperty("url",
                 "jdbc:oracle:thin:@192.168.12.16:1521:oracle8i");
         tempProp.setProperty("driver", "oracle.jdbc.driver.OracleDriver");
         tempProp.setProperty("username", "trg1");
         tempProp.setProperty("password", "tiger");
         return tempProp;
    }
 
    private static void printProperties(Properties p, String s) {
         System.out.println();
      System.out.println("========================================");
         System.out.println(s);
      System.out.println("========================================");
         System.out.println("+---------------------------------------+");
         System.out.println("| Print Application Properties          |");
         System.out.println("+---------------------------------------+");
         p.list(System.out);
         System.out.println();
    }
 
    private static void saveProperties(Properties p, String fileName) {
         OutputStream propsFile;
 
         try {
             propsFile = new FileOutputStream(fileName);
             p.store(propsFile, "Properties File to the Test Application");
             propsFile.close();
         } catch (IOException ioe) {
             System.out.println("I/O Exception.");
             ioe.printStackTrace();
             System.exit(0);
         }
 
    }
 
    private static Properties loadProperties(String fileName) {
 
         InputStream propsFile;
         Properties tempProp = new Properties();
 
         try {
             propsFile = new FileInputStream(fileName);
             tempProp.load(propsFile);
             propsFile.close();
         } catch (IOException ioe) {
             System.out.println("I/O Exception.");
             ioe.printStackTrace();
             System.exit(0);
         }
         return tempProp;
    }
 
    private static Properties alterProperties(Properties p) {
 
         Properties newProps = new Properties();
         Enumeration enProps = p.propertyNames();
         String key = "";
 
         while (enProps.hasMoreElements()) {
 
             key = (String) enProps.nextElement();
 
             /* If we want to alter the username property 
             can be set to new username and also for all 
             the other properties*/
 
             if (key.equals("username")) {
                 newProps.setProperty(key, "scott");
 
             } else {
                 newProps.setProperty(key, p.getProperty(key));
             }
 
         }
         return newProps;
    }
 
    /**
    * Sole entry point to the class and application.
    * @param args Array of String arguments.
    */
 
    public static void main(String[] args) {
 
         final String PROPFILE = "MyApplication.properties";
         Properties myProp;
         Properties myNewProp;
 
         myProp = createDefaultProperties();
         printProperties(myProp, "Newly Created (Default) Properties");
         saveProperties(myProp, PROPFILE);
         myNewProp = loadProperties(PROPFILE);
         printProperties(myNewProp, "Loaded Properties");
         myNewProp = alterProperties(myProp);
         printProperties(myNewProp, "After Altering Properties");
         saveProperties(myNewProp, PROPFILE);
         Properties myNewProp1 = loadProperties(PROPFILE);
         Enumeration enProps = myNewProp1.propertyNames();
         String key = "";//local key variable
         String param[]; //String array to read properties.
         param = new String[4];
         int i = 0;
         while (enProps.hasMoreElements()) {
             key = (String) enProps.nextElement();
             System.out.println(key);
             param[i] = (String) myNewProp1.getProperty(key);
             System.out.println("  " + key + "  ->  "
                      + myNewProp1.getProperty(key));
             i++;
         }
 
    }
}
 
/*
 
 OUTPUT:
 
 Newly Created (Default) Properties
 ========================================
 +---------------------------------------+
 | Print Application Properties          |
 +---------------------------------------+
 -- listing properties --
 url=jdbc:oracle:thin:@192.168.12.16:1521:...
 password=tiger
 driver=oracle.jdbc.driver.OracleDriver
 username=trg1
 ========================================
 Loaded Properties
 ========================================
 +---------------------------------------+
 | Print Application Properties          |
 +---------------------------------------+
 -- listing properties --
 password=tiger
 url=jdbc:oracle:thin:@192.168.12.16:1521:...
 driver=oracle.jdbc.driver.OracleDriver
 username=trg1
 
 ========================================
 After Altering Properties
 ========================================
 +---------------------------------------+
 | Print Application Properties          |
 +---------------------------------------+
 -- listing properties --
 url=jdbc:oracle:thin:@192.168.12.16:1521:...
 password=tiger
 driver=oracle.jdbc.driver.OracleDriver
 username=scott
 
 
 password  ->  tiger
 url  ->  jdbc:oracle:thin:@192.168.12.16:1521:oracle8i
 driver  ->  oracle.jdbc.driver.OracleDriver
 username  ->  scott
 */
*******************************************************************************************
Subject: File IO
 
class ReadKeys {
    public static void main(String args[]) {
         StringBuffer sb = new StringBuffer();
         char c;
         System.out.println("Enter a String:");
         try {
             while ((c = (char) System.in.read()) != '\n') {
                 sb.append(c);
             }
         } catch (Exception e) {
         }
 
         String s = new String(sb);
         System.out.println("You entered : " + s);
    }
}
**********************************************************************************************************
package com.capgemini.lesson13;
 
/*           Copy a File.
Command syntax: java CopyFile <from-file> <to-file>
*/
 
import java.io.*;
 
class CopyFile {
 
                FileInputStream fromFile;
                FileOutputStream toFile;
 
                public void init(String arg1, String arg2) {
                                //Assign the files
                                try {
                                                fromFile = new FileInputStream(arg1);
                                                toFile = new FileOutputStream(arg2);
                                } catch (FileNotFoundException fnfe) {
                                                System.out.println("Exception: " + fnfe);
                                                return;
                                }  catch (ArrayIndexOutOfBoundsException aioe) {
                                                System.out.println("Exception: " + aioe);
                                                return;
                                }
 
                }
 
                public void copyContents() {
 
                                // copy bytes
                                try {
                                                int i = fromFile.read();
                                                while (i != -1) { //check the end of file
                                                                toFile.write(i);
                                                                i = fromFile.read();
                                                }
                                } catch (IOException ioe) {
                                                System.out.println("Exception: " + ioe);
                                                return;
                                }
                }
 
                public void closeFiles() {
 
                                //close the files
                                try {
                                                fromFile.close();
                                                toFile.close();
 
                                } catch (IOException ioe) {
                                                System.out.println("Exception: " + ioe);
                                                return;
                                }
                }
 
                public static void main(String[] args) {
 
                                CopyFile c1 = new CopyFile();
                                c1.init(args[0], args[1]);
                                c1.copyContents();
                                c1.closeFiles();
                }
}
*********************************************************************************
Subject: Re: ENUM
 
package com.cg.corejava;
import java.util.Scanner;
enum Gender{M,F,m,f;}
public class MyClass3 {
 
public static void main(String[] args) {
// TODO Auto-generated method stub
Scanner sc = new Scanner(System.in); 
for (Gender printGender : Gender.values())
System.out.println("The valid gender values are: "+printGender);
 
System.out.println("\n\n\nCommand Line Inputs of Persons");
System.out.println("First Name: ");
String fname = sc.nextLine();     
Character k;
System.out.println("Last Name: ");
String lname = sc.nextLine(); 
boolean flag = true;      
//while(true)
//try
{
do{
System.out.print ("Gender: ");
k = sc.next().charAt(0);
//System.out.println("Gender: " + Gender.valueOf(sc.next()));  
 
 if(k!='M') {
 System.out.println("Not a valid input, please enter again"); }
 else
    flag = false;
} while(flag);
}
//System.out.println("Person Details:");
//catch (IllegalArgumentException InvalidGender)
//{
//System.out.println("Error: " + InvalidGender);
//}      
//finally{
System.out.println("Person Details:");
        System.out.println("---------------");
        System.out.println("First Name: "+fname); 
        System.out.println("Last Name: "+lname);
        System.out.println("Gender: " + Gender.valueOf(k.toString())); /* Here i cannot get resolve the input . output is fine but I need in an an order. */
}
}
******************************************************************************************************************************************************************************






LAB 4
 
package com.cg.corejava.lab_04_solution_4_1;
 
public class Person {
 
    private String name;
    private float age;
    public String getName() {
         return name;
    }
    public void setName(String name) {
         this.name = name;
    }
    public float getAge() {
         return age;
    }
    public void setAge(float age) {
         this.age = age;
    }
   
   
}
 
 
 
*************************
 
package com.cg.corejava.lab_04_solution_4_1;
 
import java.util.Random;
import java.util.Scanner;
 
public class Account {
               
                private long accNum = 1000;
                private double balance;
                private Person accHolder;
               
                Account() {
                                accNum++;
                }
                public long getAccNum() {
                                return accNum;
                }
                public void setAccNum(long accNum) {
                                this.accNum = accNum;
                }
                public double getBalance() {
                                return balance;
                }
                public void setBalance(double balance) {
                                this.balance = balance;
                }
                public Person getAccHolder() {
                                return accHolder;
                }
                public void setAccHolder(Person accHolder) {
                                this.accHolder = accHolder;
                }
               
                public void deposit(double amount) {
                                balance = balance + amount;
                }
               
                public void withdraw(double amount) {
                                if (balance >= amount) {
                                                balance = balance - amount;
                                } else {
                                                System.out.println("no sufficient funds");
                                }
                }
               
               
               
                @Override
                public String toString() {
                                return "Account Number: " + accNum  + "\naccHolder: " + getAccHolder().getName() + " \nbalance: " + getBalance();
                }
                public static void main(String[] args) {
                                //a. create account for smith and kathy
                                Account accounts[] = new Account[100];
                                Scanner sc = new Scanner(System.in);
                               
                                int i = 0;
                                Account ac = null;
                                long accountNum = 0;
                                while (true) {
                                                System.out.println("1. Create Account");
                                                System.out.println("2. Deposit");
                                                System.out.println("3. Withdraw");
                                                System.out.println("4. Check Balance");
                                                System.out.println("5. Exit");
                                                System.out.println("enter your choice");
                                                int choice = sc.nextInt();
                                                switch(choice) {
                                                case 1:
                                                                Random r = new Random();
                                                                int n = r.nextInt(99999) + 1001;
                                                                Person p = new Person();
                                                                System.out.println("Enter name to create account");
                                                                p.setName(sc.next());
                                                                ac = new Account();
                                                                System.out.println("enter initial bal to create account");
                                                                ac.setBalance(sc.nextDouble());
                                                                ac.setAccNum(n);
                                                                ac.setAccHolder(p);
                                                                accounts[i] = ac;
                                                                i++;
                                                                System.out.println(ac);
                                                                break;
                                                case 2:
                                                                System.out.println("enter account number to deposit");
                                                                accountNum = sc.nextLong();
                                                                System.out.println("enter amount to deposit");
                                                                double amount = sc.nextDouble();
                                                                for (int k = 0; k < i; k++) {
                                                                                Account a = accounts[k];
                                                                                if (a.accNum == accountNum) {
                                                                                                a.deposit(amount);
                                                                                }
                                                                }
                                                                break;
                                                case 3:
                                                                System.out.println("enter account number");
                                                                accountNum = sc.nextLong();
                                                                System.out.println("enter amount");
                                                                amount = sc.nextDouble();
                                                                for (int j = 0; j < i; j++) {
                                                                                Account a = accounts[j];
                                                                                if (a.getAccNum() == accountNum) {
                                                                                                a.withdraw(amount);
                                                                                }
                                                                }
                                                                break;
                                                case 4:
                                                                System.out.println("enter account number to see balance");
                                                                accountNum = sc.nextLong();
                                                                for (int j = 0; j < i; j++) {
                                                                                Account a = accounts[j];
                                                                                if (a.getAccNum() == accountNum) {
                                                                                                System.out.println(a);
                                                                                }
                                                                }
                                                                break;
                                                case 5:
                                                                sc.close();
                                                                System.exit(0);
                                                }
                                               
                                }
                               
                               
                }
               
 
}