Abstract :
 
abstract class Bike{  
      abstract void run(); 
      void brake() {
           System.out.println("Testing the braking");
      }
      static void speed(){
           System.out.println("Testing the speed");
      }
    }  
    class Abstract1 extends Bike{  
    void run(){
         System.out.println("running safely");
         }  
    public static void main(String args[]){  
    Bike obj = new Abstract1();  
    obj.run();  obj.brake();
    Abstract1.speed();
    }  
    }  
======================================================================================



import java.time.LocalDate;
import java.time.Month;
import java.time.Period;
 
/**
* This program will demonstrate on how to calculate difference between two dates
*/
 
public class CalculatingPeriod {
 
                public static void main(String[] args) {
                               
                                LocalDate start = LocalDate.of(1947,Month.AUGUST,15);
                                LocalDate end = LocalDate.now();
                               
                                Period period = start.until(end);
                               
                                System.out.println("Days:"+ period.getDays());
                                System.out.println("Months:"+period.getMonths());
                                System.out.println("Years:"+ period.getYears());
                }
}
 
 
 
import java.time.ZoneId;
import java.time.ZonedDateTime;
 
public class ZonedDateTimeDemo {
 
    public static void main(String[] args) {
        
         ZonedDateTime currentTime = ZonedDateTime.now();
         ZonedDateTime currentTimeInParis = ZonedDateTime.now(ZoneId.of("Europe/Paris"));
         ZonedDateTime currentTimeInNewYork = currentTime.withZoneSameInstant(ZoneId.of("America/New_York"));
         System.out.println("India:"+ currentTime);
         System.out.println("Paris:"+ currentTimeInParis);
         System.out.println("New York:"+ currentTimeInNewYork);
        
        
    }
}
============================================================================================
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.FormatStyle;
 
/**
* This program demonstrates on how to format date and time
*
*/
public class FormattingDate {
 
                public static void main(String[] args) {
                                /*           DateTimeFormatter is used to configure the date time format
                                                DateTimeFormatter can also be obtained by using ofPattern()
                                                which you can use for custom date and time format
                                */
                                DateTimeFormatter formatter =
                                                                DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL);
                               
                                LocalDate currentDate = LocalDate.now();
                                System.out.println(currentDate);
                                //Almost every class in java.time package provides
                                //format() method to format the date or time
                                System.out.println(currentDate.format(formatter));
                               
                }
}


package com.cg.corejava;
import java.util.Scanner;
enum Gender{M,F,m,f;}
public class MyClass3 {
 
public static void main(String[] args) {
// TODO Auto-generated method stub
Scanner sc = new Scanner(System.in); 
for (Gender printGender : Gender.values())
System.out.println("The valid gender values are: "+printGender);
 
System.out.println("\n\n\nCommand Line Inputs of Persons");
System.out.println("First Name: ");
String fname = sc.nextLine();     
Character k;
System.out.println("Last Name: ");
String lname = sc.nextLine(); 
boolean flag = true;      
//while(true)
//try
{
do{
System.out.print ("Gender: ");
k = sc.next().charAt(0);
//System.out.println("Gender: " + Gender.valueOf(sc.next()));  
 
 if(k!='M') {
 System.out.println("Not a valid input, please enter again"); }
 else
    flag = false;
} while(flag);
}
//System.out.println("Person Details:");
//catch (IllegalArgumentException InvalidGender)
//{
//System.out.println("Error: " + InvalidGender);
//}      
//finally{
System.out.println("Person Details:");
        System.out.println("---------------");
        System.out.println("First Name: "+fname); 
        System.out.println("Last Name: "+lname);
        System.out.println("Gender: " + Gender.valueOf(k.toString())); /* Here i cannot get resolve the input . output is fine but I need in an an order. */
}
}

package com.cg.corejava.lab_04_solution_4_1;
 
public class Person {
 
    private String name;
    private float age;
    public String getName() {
         return name;
    }
    public void setName(String name) {
         this.name = name;
    }
    public float getAge() {
         return age;
    }
    public void setAge(float age) {
         this.age = age;
    }
   
   
}
 
 
 
*************************
 
package com.cg.corejava.lab_04_solution_4_1;
 
import java.util.Random;
import java.util.Scanner;
 
public class Account {
               
                private long accNum = 1000;
                private double balance;
                private Person accHolder;
               
                Account() {
                                accNum++;
                }
                public long getAccNum() {
                                return accNum;
                }
                public void setAccNum(long accNum) {
                                this.accNum = accNum;
                }
                public double getBalance() {
                                return balance;
                }
                public void setBalance(double balance) {
                                this.balance = balance;
                }
                public Person getAccHolder() {
                                return accHolder;
                }
                public void setAccHolder(Person accHolder) {
                                this.accHolder = accHolder;
                }
               
                public void deposit(double amount) {
                                balance = balance + amount;
                }
               
                public void withdraw(double amount) {
                                if (balance >= amount) {
                                                balance = balance - amount;
                                } else {
                                                System.out.println("no sufficient funds");
                                }
                }
               
               
               
                @Override
                public String toString() {
                                return "Account Number: " + accNum  + "\naccHolder: " + getAccHolder().getName() + " \nbalance: " + getBalance();
                }
                public static void main(String[] args) {
                                //a. create account for smith and kathy
                                Account accounts[] = new Account[100];
                                Scanner sc = new Scanner(System.in);
                               
                                int i = 0;
                                Account ac = null;
                                long accountNum = 0;
                                while (true) {
                                                System.out.println("1. Create Account");
                                                System.out.println("2. Deposit");
                                                System.out.println("3. Withdraw");
                                                System.out.println("4. Check Balance");
                                                System.out.println("5. Exit");
                                                System.out.println("enter your choice");
                                                int choice = sc.nextInt();
                                                switch(choice) {
                                                case 1:
                                                                Random r = new Random();
                                                                int n = r.nextInt(99999) + 1001;
                                                                Person p = new Person();
                                                                System.out.println("Enter name to create account");
                                                                p.setName(sc.next());
                                                                ac = new Account();
                                                                System.out.println("enter initial bal to create account");
                                                                ac.setBalance(sc.nextDouble());
                                                                ac.setAccNum(n);
                                                                ac.setAccHolder(p);
                                                                accounts[i] = ac;
                                                                i++;
                                                                System.out.println(ac);
                                                                break;
                                                case 2:
                                                                System.out.println("enter account number to deposit");
                                                                accountNum = sc.nextLong();
                                                                System.out.println("enter amount to deposit");
                                                                double amount = sc.nextDouble();
                                                                for (int k = 0; k < i; k++) {
                                                                                Account a = accounts[k];
                                                                                if (a.accNum == accountNum) {
                                                                                                a.deposit(amount);
                                                                                }
                                                                }
                                                                break;
                                                case 3:
                                                                System.out.println("enter account number");
                                                                accountNum = sc.nextLong();
                                                                System.out.println("enter amount");
                                                                amount = sc.nextDouble();
                                                                for (int j = 0; j < i; j++) {
                                                                                Account a = accounts[j];
                                                                                if (a.getAccNum() == accountNum) {
                                                                                                a.withdraw(amount);
                                                                                }
                                                                }
                                                                break;
                                                case 4:
                                                                System.out.println("enter account number to see balance");
                                                                accountNum = sc.nextLong();
                                                                for (int j = 0; j < i; j++) {
                                                                                Account a = accounts[j];
                                                                                if (a.getAccNum() == accountNum) {
                                                                                                System.out.println(a);
                                                                                }
                                                                }
                                                                break;
                                                case 5:
                                                                sc.close();
                                                                System.exit(0);
                                                }
                                               
                                }
                               
                               
                }
               
 
}
-----------------------------------------------------------------------------------------------------------------------------------------------
import java.time.LocalDate;
import java.time.Month;
import java.time.Period;
 
/**
* This program will demonstrate on how to calculate difference between two dates
*/
 
public class CalculatingPeriod {
 
                public static void main(String[] args) {
                               
                                LocalDate start = LocalDate.of(1947,Month.AUGUST,15);
                                LocalDate end = LocalDate.now();
                               
                                Period period = start.until(end);
                               
                                System.out.println("Days:"+ period.getDays());
                                System.out.println("Months:"+period.getMonths());
                                System.out.println("Years:"+ period.getYears());
                }
}
 
 
 
import java.time.ZoneId;
import java.time.ZonedDateTime;
 
public class ZonedDateTimeDemo {
 
    public static void main(String[] args) {
        
         ZonedDateTime currentTime = ZonedDateTime.now();
         ZonedDateTime currentTimeInParis = ZonedDateTime.now(ZoneId.of("Europe/Paris"));
         ZonedDateTime currentTimeInNewYork = currentTime.withZoneSameInstant(ZoneId.of("America/New_York"));
         System.out.println("India:"+ currentTime);
         System.out.println("Paris:"+ currentTimeInParis);
         System.out.println("New York:"+ currentTimeInNewYork);
        
        ***************************************************************************************************************************************************
package com.cg.corejava;

import java.util.Scanner;

enum Gender{M,F,m,f;}

public class MyClass3 {

 

public static void main(String[] args) {

// TODO Auto-generated method stub

Scanner sc = new Scanner(System.in); 

for (Gender printGender : Gender.values())

System.out.println("The valid gender values are: "+printGender);

 

System.out.println("\n\n\nCommand Line Inputs of Persons");

System.out.println("First Name: ");

String fname = sc.nextLine();     

Character k;

System.out.println("Last Name: ");

String lname = sc.nextLine(); 

boolean flag = true;      

//while(true)

//try

{

do{

System.out.print ("Gender: ");

k = sc.next().charAt(0);

//System.out.println("Gender: " + Gender.valueOf(sc.next()));  

 

 if(k!='M') {

 System.out.println("Not a valid input, please enter again"); }

 else

    flag = false;

} while(flag);

}

//System.out.println("Person Details:");

//catch (IllegalArgumentException InvalidGender)

//{

//System.out.println("Error: " + InvalidGender);

//}      

//finally{

System.out.println("Person Details:");

        System.out.println("---------------");

        System.out.println("First Name: "+fname); 

        System.out.println("Last Name: "+lname);

        System.out.println("Gender: " + Gender.valueOf(k.toString())); /* Here i cannot get resolve the input . output is fine but I need in an an order. */

}

}

 

 
    }
}
